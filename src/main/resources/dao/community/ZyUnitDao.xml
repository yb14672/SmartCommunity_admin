<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zy_admin.community.dao.ZyUnitDao">
    <resultMap type="com.zy_admin.community.entity.ZyUnit" id="ZyUnitMap">
        <result property="unitId" column="unit_id" jdbcType="INTEGER"/>
        <result property="communityId" column="community_id" jdbcType="INTEGER"/>
        <result property="buildingId" column="building_id" jdbcType="INTEGER"/>
        <result property="unitName" column="unit_name" jdbcType="VARCHAR"/>
        <result property="unitCode" column="unit_code" jdbcType="VARCHAR"/>
        <result property="unitLevel" column="unit_level" jdbcType="INTEGER"/>
        <result property="unitAcreage" column="unit_acreage" jdbcType="NUMERIC"/>
        <result property="unitHaveElevator" column="unit_have_elevator" jdbcType="VARCHAR"/>
        <result property="createBy" column="create_by" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateBy" column="update_by" jdbcType="VARCHAR"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="remark" column="remark" jdbcType="VARCHAR"/>
    </resultMap>
    <!--根据单元id查询单个-->
    <select id="queryById" resultMap="ZyUnitMap">
        select unit_id,
               community_id,
               building_id,
               unit_name,
               unit_code,
               unit_level,
               unit_acreage,
               unit_have_elevator,
               create_by,
               create_time,
               update_by,
               update_time,
               remark
        from zy_unit
        where unit_id = #{unitId}
    </select>
    <!--多条件查询指定行数据-->
    <select id="queryAllByLimit" resultType="com.zy_admin.community.dto.UnitListDto">
        select *,(select community_name from zy_community zc where zc.community_id = zu.community_id) communityName,
        (select building_name from zy_building zb where zb.building_id = zu.building_id ) buildingName
        from zy_unit zu
        <where>
            <if test="zyUnit.buildingId != null">
                and building_id = #{zyUnit.buildingId}
            </if>
            <if test="zyUnit.unitName != null and zyUnit.unitName != ''">
                and unit_name like concat('%',#{zyUnit.unitName},'%')
            </if>
            <if test="zyUnit.unitCode != null and zyUnit.unitCode != ''">
                and unit_code like concat('%',#{zyUnit.unitCode},'%')
            </if>
            <if test="zyUnit.unitHaveElevator != null and zyUnit.unitHaveElevator != ''">
                and unit_have_elevator = #{zyUnit.unitHaveElevator}
            </if>
            <if test="zyUnit.communityId != null and zyUnit.communityId != '' ">
                and community_id = #{zyUnit.communityId}
            </if>
        </where>
        limit #{pageable.index}, #{pageable.pageSize}
    </select>
    <!--统计多条件查询后的总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from zy_unit
        <where>
            <if test="zyUnit.buildingId != null">
                and building_id = #{zyUnit.buildingId}
            </if>
            <if test="zyUnit.unitName != null and zyUnit.unitName != ''">
                and unit_name like concat('%',#{zyUnit.unitName},'%')
            </if>
            <if test="zyUnit.unitCode != null and zyUnit.unitCode != ''">
                and unit_code like concat('%',#{zyUnit.unitCode},'%')
            </if>
            <if test="zyUnit.unitHaveElevator != null and zyUnit.unitHaveElevator != ''">
                and unit_have_elevator = #{zyUnit.unitHaveElevator}
            </if>
            <if test="zyUnit.communityId != null and zyUnit.communityId != '' ">
                and community_id = #{zyUnit.communityId}
            </if>
        </where>
    </select>
    <!--新增所有列-->
    <insert id="insert" keyProperty="" useGeneratedKeys="true">
        insert into zy_unit(unit_id, community_id, building_id, unit_name, unit_code, unit_level, unit_acreage,
                            unit_have_elevator, create_by, create_time, update_by, update_time, remark)
        values (#{unitId}, #{communityId}, #{buildingId}, #{unitName}, #{unitCode}, #{unitLevel}, #{unitAcreage},
                #{unitHaveElevator}, #{createBy}, #{createTime}, #{updateBy}, #{updateTime}, #{remark})
    </insert>
    <!--通过主键修改数据-->
    <update id="updateUnit">
        update zy_unit
        <set>
            <if test="communityId != null">
                community_id = #{communityId},
            </if>
            <if test="buildingId != null">
                building_id = #{buildingId},
            </if>
            <if test="unitName != null and unitName != ''">
                unit_name = #{unitName},
            </if>
            <if test="unitCode != null and unitCode != ''">
                unit_code = #{unitCode},
            </if>
            <if test="unitLevel != null">
                unit_level = #{unitLevel},
            </if>
            <if test="unitAcreage != null">
                unit_acreage = #{unitAcreage},
            </if>
            <if test="unitHaveElevator != null and unitHaveElevator != ''">
                unit_have_elevator = #{unitHaveElevator},
            </if>
            <if test="createBy != null and createBy != ''">
                create_by = #{createBy},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="updateBy != null and updateBy != ''">
                update_by = #{updateBy},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
            <if test="remark != null and remark != ''">
                remark = #{remark},
            </if>
        </set>
        where unit_id = #{unitId}
    </update>
    <!--新增单元-->
    <insert id="insertUnit">
        insert into zy_unit(unit_id, community_id, building_id, unit_name, unit_code, unit_level, unit_acreage,
                            unit_have_elevator, create_by, create_time, update_by, update_time, remark)
        values (#{unitId}, #{communityId}, #{buildingId}, #{unitName}, #{unitCode},
                #{unitLevel}, #{unitAcreage}, #{unitHaveElevator}, #{createBy},
                #{createTime}, #{updateBy}, #{updateTime}, #{remark})
    </insert>
    <!--根据社区id,楼层id,单元名称查询单元-->
    <select id="selectUnitName" resultType="com.zy_admin.community.entity.ZyUnit">
        select *
        from zy_unit
        where community_id = #{unit.communityId}
          and building_id = #{unit.buildingId}
          and unit_name = #{unit.unitName}
    </select>
    <!--根据id来删除单元-->
    <delete id="deleteUnit">
        delete from zy_unit where unit_id in
        <foreach collection="unitIds" item="unitIds" separator="," open="(" close=")">
            #{unitIds}
        </foreach>
    </delete>
    <!--根据小区id获取所有房屋相关信息-->
    <select id="getAll" resultType="com.zy_admin.community.dto.UnitListDto">
        select *,
               (select community_name from zy_community zc where zc.community_id = zu.community_id) communityName,
               (select building_name from zy_building zb where zb.building_id = zu.building_id)     buildingName
        from zy_unit zu where community_id = #{communityId}
    </select>
    <select id="getUnitById" resultType="com.zy_admin.community.dto.UnitListDto">
        select *,(select community_name from zy_community zc where zc.community_id = zu.community_id) communityName,
        (select building_name from zy_building zb where zb.building_id = zu.building_id ) buildingName
        from zy_unit zu WHERE zu.unit_id in
        <foreach collection="unitIds" item="Unit_id" separator="," open="(" close=")">
            #{Unit_id}
        </foreach>
    </select>


</mapper>

