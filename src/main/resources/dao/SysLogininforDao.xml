<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zy_admin.sys.dao.SysLogininforDao">

    <resultMap type="com.zy_admin.sys.entity.SysLogininfor" id="SysLogininforMap">
        <result property="infoId" column="info_id" jdbcType="INTEGER"/>
        <result property="userName" column="user_name" jdbcType="VARCHAR"/>
        <result property="ipaddr" column="ipaddr" jdbcType="VARCHAR"/>
        <result property="loginLocation" column="login_location" jdbcType="VARCHAR"/>
        <result property="browser" column="browser" jdbcType="VARCHAR"/>
        <result property="os" column="os" jdbcType="VARCHAR"/>
        <result property="status" column="status" jdbcType="VARCHAR"/>
        <result property="msg" column="msg" jdbcType="VARCHAR"/>
        <result property="loginTime" column="login_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="SysLogininforMap">
        select info_id,
               user_name,
               ipaddr,
               login_location,
               browser,
               os,
               status,
               msg,
               login_time
        from sys_logininfor
        where info_id = #{infoId}
    </select>

    <!--查询指定行数据-->
    <select id="queryLogininfor" resultType="com.zy_admin.sys.entity.SysLogininfor">
        select
        info_id, user_name, ipaddr, login_location, browser, os, status, msg, login_time
        from sys_logininfor
        <where>
            <if test="loginInFor.userName != null and loginInFor.userName != ''">
                and user_name like concat('%',#{loginInFor.userName},'%')
            </if>
            <if test="loginInFor.ipaddr != null and loginInFor.ipaddr != ''">
                and ipaddr like concat('%',#{loginInFor.ipaddr},'%')
            </if>
            <if test="loginInFor.status != null and loginInFor.status != ''">
                and status = #{loginInFor.status}
            </if>
            <if test="startTime != null and startTime != ''">
                and login_time >= #{startTime}
            </if>
            <if test="endTime != null and endTime != ''">
                and login_time &lt;= #{endTime}
            </if>
        </where>
        limit #{pageable.index}, #{pageable.pageSize}
    </select>
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from sys_logininfor
        <where>
            <if test="loginInFor.userName != null and loginInFor.userName != ''">
                and user_name like concat('%',#{loginInFor.userName},'%')
            </if>
            <if test="loginInFor.ipaddr != null and loginInFor.ipaddr != ''">
                and ipaddr like concat('%',#{loginInFor.ipaddr},'%')
            </if>
            <if test="loginInFor.status != null and loginInFor.status != ''">
                and status = #{loginInFor.status}
            </if>
            <if test="startTime != null and startTime != ''">
                and login_time >= #{startTime}
            </if>
            <if test="endTime != null and endTime != ''">
                and login_time &lt;= #{endTime}
            </if>
        </where>
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="SysLogininforMap">
        select
        info_id, user_name, ipaddr, login_location, browser, os, status, msg, login_time
        from sys_logininfor
        <where>
            <if test="infoId != null">
                and info_id = #{infoId}
            </if>
            <if test="userName != null and userName != ''">
                and user_name = #{userName}
            </if>
            <if test="ipaddr != null and ipaddr != ''">
                and ipaddr = #{ipaddr}
            </if>
            <if test="loginLocation != null and loginLocation != ''">
                and login_location = #{loginLocation}
            </if>
            <if test="browser != null and browser != ''">
                and browser = #{browser}
            </if>
            <if test="os != null and os != ''">
                and os = #{os}
            </if>
            <if test="status != null and status != ''">
                and status = #{status}
            </if>
            <if test="msg != null and msg != ''">
                and msg = #{msg}
            </if>
            <if test="loginTime != null">
                and login_time = #{loginTime}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>
    <!--查询导出日志-->
    <select id="queryLoginInFor" resultType="com.zy_admin.sys.dto.LoginInForExcelDto">
        select
        info_id, user_name, ipaddr, login_location, browser, os, status, msg, login_time
        from sys_logininfor
        <if test="list != null and list.size != 0">
            where info_id in (
            <foreach collection="list" item="id" separator=",">
                #{id}
            </foreach>
            )
        </if>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="infoId" useGeneratedKeys="true">
        insert into sys_logininfor(user_name, ipaddr, login_location, browser, os, status, msg, login_time)
        values (#{userName}, #{ipaddr}, #{loginLocation}, #{browser}, #{os}, #{status}, #{msg}, #{loginTime})
    </insert>

    <insert id="insertBatch" keyProperty="infoId" useGeneratedKeys="true">
        insert into sys_logininfor(user_name, ipaddr, login_location, browser, os, status, msg, login_time)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.userName}, #{entity.ipaddr}, #{entity.loginLocation}, #{entity.browser}, #{entity.os},
            #{entity.status}, #{entity.msg}, #{entity.loginTime})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="infoId" useGeneratedKeys="true">
        insert into sys_logininfor(user_name, ipaddr, login_location, browser, os, status, msg, login_time)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.userName}, #{entity.ipaddr}, #{entity.loginLocation}, #{entity.browser}, #{entity.os},
            #{entity.status}, #{entity.msg}, #{entity.loginTime})
        </foreach>
        on duplicate key update
        user_name = values(user_name),
        ipaddr = values(ipaddr),
        login_location = values(login_location),
        browser = values(browser),
        os = values(os),
        status = values(status),
        msg = values(msg),
        login_time = values(login_time)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update sys_logininfor
        <set>
            <if test="userName != null and userName != ''">
                user_name = #{userName},
            </if>
            <if test="ipaddr != null and ipaddr != ''">
                ipaddr = #{ipaddr},
            </if>
            <if test="loginLocation != null and loginLocation != ''">
                login_location = #{loginLocation},
            </if>
            <if test="browser != null and browser != ''">
                browser = #{browser},
            </if>
            <if test="os != null and os != ''">
                os = #{os},
            </if>
            <if test="status != null and status != ''">
                status = #{status},
            </if>
            <if test="msg != null and msg != ''">
                msg = #{msg},
            </if>
            <if test="loginTime != null">
                login_time = #{loginTime},
            </if>
        </set>
        where info_id = #{infoId}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from sys_logininfor
        where info_id = #{infoId}
    </delete>

    <delete id="deleteByIds" parameterType="integer">
        delete from sys_logininfor where info_id in
        <foreach collection="ids" item="info_id" separator="," open="(" close=")">
            #{info_id}
        </foreach>
    </delete>
    <delete id="EmptyLog">
        delete
        from sys_logininfor;
    </delete>
</mapper>

